plugins {
    id 'info.solidsoft.pitest' version '1.9.0'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'maven-publish'
}

group = 'com.agonyforge'
version = '0.0.5-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations.maybeCreate("pitest")

dependencies {
    pitest 'org.pitest:pitest-junit5-plugin:1.1.0'

    implementation 'com.hazelcast:hazelcast:5.2.1'
    implementation 'io.projectreactor.netty:reactor-netty:1.1.0'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.session:spring-session-hazelcast'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Implementation-Title': "Agony Forge Core",
            'Implementation-Version': getArchiveVersion()
        )
    }
}

bootJar {
    enabled = false // don't build the spring boot jar
}

pitest {
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false

    targetClasses = [
        "com.agonyforge.mud.core.*"
    ]

    excludedMethods = [
        "hashCode",
        "equals"
    ]

    excludedClasses = [
        "com.agonyforge.mud.core.config.*",
        "com.agonyforge.mud.core.*.Abstract*"
    ]
}

tasks.pitest.mustRunAfter test
check.dependsOn tasks.pitest

publishing {
    repositories {
        maven {
            name = "agonyforge-mud-core"
            url = uri("https://maven.pkg.github.com/scionaltera/agonyforge")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            artifact jar
        }
    }
}
