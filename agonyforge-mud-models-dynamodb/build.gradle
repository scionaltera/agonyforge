plugins {
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'java-test-fixtures'
    id 'maven-publish'
}

group 'com.agonyforge'
version '0.0.10-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://s3-us-west-2.amazonaws.com/dynamodb-local/release'
    }
}

dependencyManagement {
    imports {
        mavenBom 'software.amazon.awssdk:bom:2.20.149'
    }
}

dependencies {
    implementation project(":agonyforge-mud-core")

    implementation 'software.amazon.awssdk:dynamodb'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.testcontainers:testcontainers:1.19.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.junit.platform:junit-platform-launcher'

    testFixturesImplementation 'software.amazon.awssdk:dynamodb'
    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test'
    testFixturesImplementation 'org.springframework.security:spring-security-test'
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-params'
    testFixturesImplementation 'org.testcontainers:testcontainers:1.19.0'
    testFixturesImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testFixturesImplementation 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

task copyNativeLibs(type: Copy) {
    from (configurations.testRuntimeClasspath) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/libs'
}

compileTestJava {
    dependsOn(copyNativeLibs)
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Implementation-Title': "Agony Forge DynamoDB",
            'Implementation-Version': getArchiveVersion()
        )
    }
}

bootJar {
    enabled = false // don't build the spring boot jar
}

tasks.test {
    doFirst {
        systemProperty "java.library.path", 'build/libs'
    }
}

test.dependsOn tasks.copyNativeLibs

publishing {
    repositories {
        maven {
            name = "agonyforge-mud-models-dynamodb"
            url = uri("https://maven.pkg.github.com/scionaltera/agonyforge")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            artifact jar
        }
    }
}
